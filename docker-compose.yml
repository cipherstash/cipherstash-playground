services:
  cipherstash-proxy:
    container_name: cipherstash-proxy
    ports:
      - 6432:6432
      - 9930:9930
    volumes:
      - ./config/cipherstash/cipherstash-proxy.toml:/etc/cipherstash-proxy/cipherstash-proxy.toml
    environment:
      - LOG_LEVEL=debug
    image: cipherstash/cipherstash-proxy:pr-810
    labels:
      logging: "promtail"
      logging_jobname: "proxylogs"
    depends_on:
      - toxiproxy
      - db
    networks:
      - app

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/cipherstash.json
    networks:
      - app

  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app

  toxiproxy:
    container_name: toxiproxy
    image: ghcr.io/shopify/toxiproxy:latest
    command: -config toxiproxy.json
    environment:
      - LOG_LEVEL=info
    ports:
      - 5433:5433
      - 8474:8474
    volumes:
      - ./config/toxiproxy/toxiproxy.json:/toxiproxy.json
    depends_on:
      - db
    networks:
      - app

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./config/promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - app

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - app

  db:
    image: db
    container_name: db
    build:
      context: ./db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app

  app:
    image: app
    container_name: app
    build:
      context: ./app
    ports:
      - 8080:8080
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=password
      - PG_DATABASE=postgres
      - PG_HOST=cipherstash-proxy
      - PG_PORT=6432
    depends_on:
      - cipherstash-proxy
    networks:
      - app

  # DataDog Agent example
  # agent:
  #   container_name: dd-agent
  #   environment:
  #     - DD_API_KEY=...
  #     - DD_SITE=us5.datadoghq.com
  #     - DD_LOGS_ENABLED=true
  #     - DD_LOG_LEVEL=DEBUG
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /proc/:/host/proc/:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - ./config/datadog-conf.yaml:/etc/datadog-agent/conf.d/openmetrics.d/conf.yaml
  #   image: gcr.io/datadoghq/agent:7

networks:
  app:
    name: app
